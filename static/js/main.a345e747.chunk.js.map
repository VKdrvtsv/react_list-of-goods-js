{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPH","SORT_BY_LENGTH","SORT_REVERSE","App","useState","sortField","setSortField","direction","setDirection","sortedGoods","goods","sort","good1","good2","localeCompare","length","reverse","getSortedGoods","className","type","cn","button","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAkB,OAClBC,EAAiB,SACjBC,EAAe,UA2Bd,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EA5BR,SAAwBC,EAAxB,GAA0D,IAAzBL,EAAwB,EAAxBA,UAAWE,EAAa,EAAbA,UACpCE,EAAW,YAAOC,GAqBxB,OAnBIL,GACFI,EAAYE,MAAK,SAACC,EAAOC,GACvB,OAAQR,GACN,KAAKL,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXR,GACFE,EAAYO,UAGPP,EAMaQ,CAAelB,EAAiB,CAAEM,YAAWE,cAOjE,OACE,mCACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,CAAE,WAAYf,IAAcL,EACxCqB,QAAQ,EACR,WAAW,IACbC,QAAS,kBAAMhB,EAAaN,IAL9B,iCAUA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,CAAE,WAAYf,IAAcJ,EACxCoB,QAAQ,EACR,cAAc,IAChBC,QAAS,kBAAMhB,EAAaL,IAL9B,4BAUA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,CAAE,WAAYb,IAAcL,EACxCmB,QAAQ,EACR,cAAc,IAChBC,QAAS,kBAAMd,EAAcD,EAA2B,GAAfL,IAL3C,wBAUIG,KAAeE,IAEjB,wBACEY,KAAK,SACLD,UAAU,4BACVI,QA5CE,WACZhB,EAAa,IACbE,EAAa,KAuCL,sBAUJ,6BACGC,EAAYc,KAAI,SAAAC,GAAI,OACnB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,cCtGrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a345e747.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPH = 'alph';\nconst SORT_BY_LENGTH = 'length';\nconst SORT_REVERSE = 'reverse';\n\nfunction getSortedGoods(goods, { sortField, direction }) {\n  const sortedGoods = [...goods];\n\n  if (sortField) {\n    sortedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPH:\n          return good1.localeCompare(good2);\n\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (direction) {\n    sortedGoods.reverse();\n  }\n\n  return sortedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [direction, setDirection] = useState('');\n  const sortedGoods = getSortedGoods(goodsFromServer, { sortField, direction });\n\n  const reset = () => {\n    setSortField('');\n    setDirection('');\n  };\n\n  return (\n    <>\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn({ 'is-light': sortField !== SORT_FIELD_ALPH,\n              button: true,\n              'is-info': true })}\n            onClick={() => setSortField(SORT_FIELD_ALPH)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn({ 'is-light': sortField !== SORT_BY_LENGTH,\n              button: true,\n              'is-success': true })}\n            onClick={() => setSortField(SORT_BY_LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn({ 'is-light': direction !== SORT_REVERSE,\n              button: true,\n              'is-warning': true })}\n            onClick={() => setDirection(!direction ? SORT_REVERSE : '')}\n          >\n            Reverse\n          </button>\n\n          {(!!sortField || !!direction)\n            && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n            )}\n        </div>\n\n        <ul>\n          {sortedGoods.map(good => (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}